{"course_id": "CS 100", "course_name": "Principles of Computing", "course_summary": "Introduces the field of computing, including creativity, abstraction, data, algorithms, programming, Internet, and the societal impact of computing.", "course_prereqs": ""}
{"course_id": "CS 105", "course_name": "Computer Ethics and Society", "course_summary": "Explores legal, social, and ethical issues in computing such as intellectual property, privacy, security, liability, and professional conduct.", "course_prereqs": ""}
{"course_id": "CS 108", "course_name": "Intro to Computer Programming, Part A", "course_summary": "First part of a two-semester sequence for students with little or no programming experience. Covers programming basics including expressions, control structures, functions, debugging, history of computing, and societal impact.", "course_prereqs": ""}
{"course_id": "CS 109", "course_name": "Intro to Computer Programming, Part B", "course_summary": "Continuation of CS 108, covering recursion, exceptions, file I/O, and object-oriented basics. Prepares students for more advanced programming courses.", "course_prereqs": "Prerequisite(s): CS 108"}
{"course_id": "CS 110", "course_name": "Essentials of Computer Science", "course_summary": "Broad overview of computer science for majors including data representation, networking basics, privacy, ethics, and research exposure.", "course_prereqs": ""}
{"course_id": "CS 112", "course_name": "Introduction to Computer Programming", "course_summary": "Rigorous introduction to problem solving with programming. Covers pseudocode, primitive data types, control structures, functions, and debugging.", "course_prereqs": ""}
{"course_id": "CS 211", "course_name": "Object-Oriented Programming", "course_summary": "Covers object-oriented principles including classes, inheritance, polymorphism, interfaces, and error handling. Introduces intermediate data structures.", "course_prereqs": "Prerequisite(s): CS 112"}
{"course_id": "CS 222", "course_name": "Computer Programming for Engineers", "course_summary": "Introduction to programming in C for engineering students. Includes pointers, basic data structures, file I/O, bitwise operations, and Unix tools.", "course_prereqs": ""}
{"course_id": "CS 262", "course_name": "Introduction to Low-Level Programming", "course_summary": "C programming and introductory operating system concepts under UNIX. Prepares for courses in systems, architecture, and compilers.", "course_prereqs": "Prerequisite(s): CS 112"}
{"course_id": "CS 306", "course_name": "Synthesis of Ethics and Law for the Computing Professional", "course_summary": "Intensive look at ethical and legal aspects of computing. Covers philosophical foundations, e-commerce, Internet use, privacy, and regulation.", "course_prereqs": "Prerequisite(s): Junior standing"}
{"course_id": "CS 310", "course_name": "Data Structures", "course_summary": "Covers linear and nonlinear data structures and design/analysis of algorithms. Reinforces object-oriented programming with moderate to large programs.", "course_prereqs": "Prerequisite(s): CS 211"}
{"course_id": "CS 321", "course_name": "Software Engineering", "course_summary": "Concepts, tools, and methods for large-scale software system design: requirements, modeling, UML, design, validation, and maintenance. Includes group project.", "course_prereqs": "Prerequisite(s): CS 211, CS 310"}
{"course_id": "CS 325", "course_name": "Introduction to Game Design", "course_summary": "Survey of game design across narrative, art, and programming, with emphasis on programming aspects.", "course_prereqs": ""}
{"course_id": "CS 330", "course_name": "Formal Methods and Models", "course_summary": "Abstract foundations of computing: formal languages, models of computation, logic, and proof strategies.", "course_prereqs": "Prerequisite(s): CS 310"}
{"course_id": "CS 351", "course_name": "Visual Computing", "course_summary": "Mathematical and geometric foundations of computer graphics: 2D/3D modeling, GUI, computational geometry, and graphics algorithms.", "course_prereqs": "Prerequisite(s): CS 211, CS 310, MATH 125"}
{"course_id": "CS 367", "course_name": "Computer Systems and Programming", "course_summary": "Covers systems-level topics from the programmerâ€™s perspective: machine/assembly representation, memory hierarchy, linking, interrupts, virtual memory, and I/O.", "course_prereqs": "Prerequisite(s): CS 262"}
{"course_id": "CS 390", "course_name": "Research and Project Design Principles in Computing", "course_summary": "Introduces research and project design in computing: formulating questions, methods, gathering evidence, evaluating, and communicating results.", "course_prereqs": "Prerequisite(s): CS 211"}
{"course_id": "CS 391", "course_name": "Advanced Programming Lab", "course_summary": "Lab course focused on strengthening programming, problem solving, and teamwork. Students apply algorithms and data structures to novel problems.", "course_prereqs": "Prerequisite(s): CS 310"}
{"course_id": "CS 425", "course_name": "Game Programming I", "course_summary": "Introduction to technologies used in modern computer games. Includes design and prototyping of a game project.", "course_prereqs": "Prerequisite(s): CS 310, CS 325"}
{"course_id": "CS 426", "course_name": "Game Programming II", "course_summary": "Continuation of Game Programming I. Students implement a complete game from design to execution.", "course_prereqs": "Prerequisite(s): CS 425"}
{"course_id": "CS 440", "course_name": "Compilers", "course_summary": "Survey of compiler design: lexical analysis, parsing, semantic analysis, code generation, optimization, and runtime environments.", "course_prereqs": "Prerequisite(s): CS 310, CS 367"}
{"course_id": "CS 450", "course_name": "Database Concepts", "course_summary": "Covers relational and object-relational databases, SQL, normalization, functional dependencies, ER/EER models, security, and applications.", "course_prereqs": "Prerequisite(s): CS 310, STAT 344"}
{"course_id": "CS 455", "course_name": "Computer Communications and Networking", "course_summary": "Study of communication protocols, TCP/IP layers, architectures, and performance. Covers both foundational and emerging networking technologies.", "course_prereqs": "Prerequisite(s): CS 310"}
{"course_id": "CS 465", "course_name": "Computer Systems Architecture", "course_summary": "Covers instruction-set architecture, pipeline design, memory hierarchy, and I/O subsystems.", "course_prereqs": "Prerequisite(s): CS 367"}
{"course_id": "CS 468", "course_name": "Secure Programming and Systems", "course_summary": "Principles of building secure systems: vulnerability analysis, secure programming, and distributed systems security.", "course_prereqs": "Prerequisite(s): CS 367"}
{"course_id": "CS 469", "course_name": "Security Engineering", "course_summary": "Design and implementation of security defenses including access control, identity management, intrusion detection, and forensics.", "course_prereqs": "Prerequisite(s): CS 367"}
{"course_id": "CS 471", "course_name": "Operating Systems", "course_summary": "Principles of operating systems including processes, threads, synchronization, memory management, file systems, and deadlock.", "course_prereqs": "Prerequisite(s): CS 367"}
{"course_id": "CS 475", "course_name": "Concurrent and Distributed Systems", "course_summary": "Software design for concurrent and distributed environments including multithreading, synchronization, and network programming.", "course_prereqs": "Prerequisite(s): CS 367"}
{"course_id": "CS 477", "course_name": "Mobile Application Development", "course_summary": "Development for mobile platforms: UI, event-driven programming, networking, and optimization under constraints.", "course_prereqs": "Prerequisite(s): CS 310"}
{"course_id": "CS 478", "course_name": "Natural Language Processing", "course_summary": "Algorithms and methods in NLP including language modeling, sentiment analysis, POS tagging, and parsing.", "course_prereqs": "Prerequisite(s): CS 310, CS 330"}
{"course_id": "CS 480", "course_name": "Introduction to Artificial Intelligence", "course_summary": "Principles and methods of AI including search, planning, learning, reasoning, and knowledge representation.", "course_prereqs": "Prerequisite(s): CS 310, CS 330"}
{"course_id": "CS 482", "course_name": "Computer Vision", "course_summary": "Covers algorithms for visual perception including edge detection, segmentation, and object recognition.", "course_prereqs": "Prerequisite(s): CS 310, CS 330"}
{"course_id": "CS 483", "course_name": "Analysis of Algorithms", "course_summary": "Rigorous analysis of algorithms including complexity, correctness, and optimization.", "course_prereqs": "Prerequisite(s): CS 310, MATH 125"}
{"course_id": "CS 484", "course_name": "Data Mining", "course_summary": "Methods for knowledge discovery from data: classification, clustering, preprocessing, and evaluation.", "course_prereqs": "Prerequisite(s): CS 310, STAT 344"}
{"course_id": "CS 485", "course_name": "Autonomous Robotics", "course_summary": "Study of autonomy in robotics including planning, sensor fusion, and learning.", "course_prereqs": "Prerequisite(s): CS 310, CS 367"}
{"course_id": "CS 487", "course_name": "Introduction to Cryptography", "course_summary": "Introduction to cryptographic techniques including symmetric and public-key encryption, authentication, and hash functions.", "course_prereqs": "Prerequisite(s): CS 310, MATH 125"}
{"course_id": "CS 489", "course_name": "Deep Learning", "course_summary": "Study of neural networks, CNNs, RNNs, transformers, supervised and unsupervised learning, reinforcement learning, and generative models.", "course_prereqs": "Prerequisite(s): CS 480 or CS 484"}
{"course_id": "CS 490", "course_name": "Design Exhibition", "course_summary": "Capstone course involving design and implementation of a major software project with teamwork.", "course_prereqs": "Prerequisite(s): CS 321"}
{"course_id": "CS 491", "course_name": "Industry-Sponsored Senior Design Project", "course_summary": "Two-semester sequence where students implement real-world projects with industry sponsors.", "course_prereqs": "Prerequisite(s): CS 321"}
{"course_id": "CS 504", "course_name": "Principles of Data Management and Mining", "course_summary": "Introduces principles of data management and data mining including relational modeling, query languages, data warehouses, and methods for data analysis.", "course_prereqs": ""}
{"course_id": "CS 540", "course_name": "Language Processors", "course_summary": "Covers principles and design of compilers, assemblers, and interpreters. Topics include lexical analysis, parsing, semantic analysis, code generation, and optimization.", "course_prereqs": "Prerequisite(s): CS 310 or equivalent"}
{"course_id": "CS 550", "course_name": "Database Systems", "course_summary": "Advanced study of database models, relational theory, query languages, normalization, concurrency control, recovery, security, and distributed databases.", "course_prereqs": "Prerequisite(s): CS 450 or equivalent"}
{"course_id": "CS 555", "course_name": "Computer Communications and Networking", "course_summary": "Graduate-level treatment of networking concepts, covering data link, network, transport, and application layers with emphasis on TCP/IP and advanced protocols.", "course_prereqs": "Prerequisite(s): CS 455 or equivalent"}
{"course_id": "CS 571", "course_name": "Operating Systems", "course_summary": "Covers design principles of operating systems including scheduling, synchronization, memory management, file systems, and distributed OS concepts.", "course_prereqs": "Prerequisite(s): CS 367 or equivalent"}
{"course_id": "CS 580", "course_name": "Introduction to Artificial Intelligence", "course_summary": "Introduces AI problem-solving techniques including search, knowledge representation, reasoning, planning, and machine learning.", "course_prereqs": "Prerequisite(s): CS 310, CS 330 or equivalent"}
{"course_id": "CS 583", "course_name": "Analysis of Algorithms", "course_summary": "Advanced analysis of algorithms and data structures, including time and space complexity, NP-completeness, and approximation algorithms.", "course_prereqs": "Prerequisite(s): CS 483 or equivalent"}
{"course_id": "CS 584", "course_name": "Data Mining", "course_summary": "Graduate-level study of data mining techniques including classification, clustering, association rules, and advanced topics such as graph mining.", "course_prereqs": "Prerequisite(s): CS 550 or equivalent"}
{"course_id": "CS 685", "course_name": "Autonomous Robotics", "course_summary": "Graduate course on robotics, covering motion planning, sensor integration, learning, and adaptive behaviors.", "course_prereqs": "Prerequisite(s): CS 480 or CS 484"}
{"course_id": "CS 688", "course_name": "Machine Learning", "course_summary": "Introduces supervised and unsupervised learning, decision trees, neural networks, Bayesian methods, ensemble methods, and reinforcement learning.", "course_prereqs": "Prerequisite(s): CS 580 or equivalent"}
{"course_id": "CS 690", "course_name": "Advanced Topics in Computer Science", "course_summary": "Covers special and emerging topics in computer science. Content and prerequisites vary by offering.", "course_prereqs": ""}
{"course_id": "CS 695", "course_name": "Independent Study in Computer Science", "course_summary": "Directed study on selected topics in computer science under faculty supervision.", "course_prereqs": "Prerequisite(s): Departmental approval"}
{"course_id": "CS 700", "course_name": "Quantitative Foundations of Computer Science", "course_summary": "PhD-level course on mathematical foundations of computer science, including probability, statistics, and discrete mathematics applied to computing.", "course_prereqs": ""}
{"course_id": "CS 740", "course_name": "Advanced Compiler Design", "course_summary": "Covers advanced compiler topics including optimization, parallelizing compilers, and code generation for modern architectures.", "course_prereqs": "Prerequisite(s): CS 540"}
{"course_id": "CS 750", "course_name": "Advanced Database Systems", "course_summary": "Covers database internals, distributed databases, parallel databases, data integration, and large-scale data management systems.", "course_prereqs": "Prerequisite(s): CS 550"}
{"course_id": "CS 782", "course_name": "Computer Vision", "course_summary": "Advanced study of algorithms in computer vision including 3D reconstruction, motion analysis, object recognition, and deep learning for vision.", "course_prereqs": "Prerequisite(s): CS 482 or equivalent"}
{"course_id": "CS 787", "course_name": "Advanced Cryptography", "course_summary": "Graduate-level exploration of cryptographic theory and applications, covering zero-knowledge proofs, secure multi-party computation, and advanced protocols.", "course_prereqs": "Prerequisite(s): CS 487 or equivalent"}
{"course_id": "CS 788", "course_name": "Advanced Machine Learning", "course_summary": "Advanced methods in ML including deep architectures, generative models, reinforcement learning, and fairness in AI.", "course_prereqs": "Prerequisite(s): CS 688"}
{"course_id": "CS 795", "course_name": "Doctoral Seminar", "course_summary": "Research seminar for doctoral students in computer science. Includes presentation and discussion of current research topics.", "course_prereqs": ""}